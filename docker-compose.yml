version: "3.9"
services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-quantum}
      POSTGRES_USER: ${POSTGRES_USER:-quantum}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-quantum}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: quantum
      POSTGRES_USER: quantum
      POSTGRES_PASSWORD: quantum
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      LOG_LEVEL: INFO
      NUM_SHOTS: 1024
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: quantum
      POSTGRES_USER: quantum
      POSTGRES_PASSWORD: quantum
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      LOG_LEVEL: INFO
      NUM_SHOTS: 1024
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  pgdata:
